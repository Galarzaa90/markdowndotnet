{
    "ExampleProject": {
        "ApiClient": {
            "children": {
                "token": {
                    "documentation": {
                        "summary": "Authentication token",
                        "value": "Authentication token for the account or Application."
                    },
                    "type": "F"
                },
                "Users": {
                    "documentation": {
                        "summary": "Gets a list of all the visible users.",
                        "value": "Array containing all users the <see cref=\"T:ExampleProject.Models.ClientUser\" /> can see."
                    },
                    "type": "P"
                },
                "OnMessageReceived": {
                    "documentation": {
                        "summary": "Event received every time a <see cref=\"T:ExampleProject.Models.Message\" /> is received on any <see cref=\"T:ExampleProject.Models.Channel\" /> the client sees."
                    },
                    "type": "E"
                },
                ".ctor": {
                    "documentation": {
                        "summary": "Initializes a new instance of the <see cref=\"T:ExampleProject.ApiClient\" /> class."
                    },
                    "type": "C"
                },
                "Login(System.String)": {
                    "documentation": {
                        "summary": "Logs in to the API",
                        "param": {
                            "token": "The authentication token to use for login."
                        },
                        "returns": "<c>true</c> if login was successful, <c>false</c> otherwise."
                    },
                    "type": "M"
                },
                "GetGuild(System.Int32)": {
                    "documentation": {
                        "summary": "Gets a <see cref=\"T:ExampleProject.Models.Guild\" /> with the specified id.",
                        "param": {
                            "guildId": "The unique id of the guild."
                        },
                        "returns": "The guild found, or <c>null</c>."
                    },
                    "type": "M"
                },
                "GetUser(System.Int32)": {
                    "documentation": {
                        "summary": "Gets a <see cref=\"T:ExampleProject.Models.User\" /> with the specified id.",
                        "param": {
                            "userId": "The unique id of the user."
                        },
                        "returns": "The user found, or <c>null</c>."
                    },
                    "type": "M"
                }
            },
            "documentation": {
                "summary": "Represents a connection to the client"
            },
            "type": "T"
        }
    },
    "ExampleProject.Models": {
        "GuildUser": {
            "children": {
                "Roles": {
                    "documentation": {
                        "summary": "Gets the roles the user has in this guild.",
                        "value": "An array of <see cref=\"T:ExampleProject.Models.Role\" />s"
                    },
                    "type": "P"
                },
                "JoinedAt": {
                    "documentation": {
                        "summary": "Gets the date when the user joined this guild.",
                        "value": "The join date in UTC."
                    },
                    "type": "P"
                },
                "Guild": {
                    "documentation": {
                        "summary": "Gets the guild where this user belongs to.",
                        "value": "The guild where this user is."
                    },
                    "type": "P"
                },
                "Nick": {
                    "documentation": {
                        "summary": "Gets the user's nickname.",
                        "value": "The user's nickname if set, otherwise <c>null</c>."
                    },
                    "type": "P"
                },
                "DisplayName": {
                    "documentation": {
                        "summary": "Gets the user's display name",
                        "remarks": "The display name consist of the user's <see cref=\"P:ExampleProject.Models.GuildUser.Nick\" /> (if set) or the user's <see cref=\"P:ExampleProject.Models.User.Name\" />.",
                        "value": "The user's display name."
                    },
                    "type": "P"
                }
            },
            "documentation": {
                "summary": "Represents a <see cref=\"T:ExampleProject.Models.User\" /> in a <see cref=\"T:ExampleProject.Models.Guild\" />"
            },
            "type": "T"
        },
        "OnMessageHandler": {
            "children": {},
            "documentation": {
                "summary": "Delegate for the <see cref=\"E:ExampleProject.ApiClient.OnMessageReceived\" /> event.",
                "param": {
                    "message": "The message received"
                }
            },
            "type": "T"
        },
        "ClientUser": {
            "children": {
                "Friends": {
                    "documentation": {
                        "summary": "Gets the user's friends.",
                        "value": "An array of Users that are friends with the current user.",
                        "remarks": "Only non-bot users can have friends."
                    },
                    "type": "P"
                },
                "Blocked": {
                    "documentation": {
                        "summary": "Gets the list of users block by this user.",
                        "value": "An array of Users that are blocked by the current user.",
                        "remarks": "Only non-bot users can block users."
                    },
                    "type": "P"
                }
            },
            "documentation": {
                "summary": "Represents the User that connected to the API."
            },
            "type": "T"
        },
        "Color": {
            "children": {
                "Value": {
                    "documentation": {
                        "summary": "Gets or sets the color's raw integer value.",
                        "value": "The color's integer value."
                    },
                    "type": "P"
                },
                "R": {
                    "documentation": {
                        "summary": "Gets the red component of the color.",
                        "value": "The red component of the color."
                    },
                    "type": "P"
                },
                "G": {
                    "documentation": {
                        "summary": "Gets the greeb component of the color.",
                        "value": "The greeb component of the color."
                    },
                    "type": "P"
                },
                "B": {
                    "documentation": {
                        "summary": "Gets the blue component of the color.",
                        "value": "The blue component of the color."
                    },
                    "type": "P"
                },
                ".ctor(System.Int32,System.Int32,System.Int32)": {
                    "documentation": {
                        "summary": "Creates a color from its red, green and blue components respectively.",
                        "param": {
                            "r": "Red component.",
                            "g": "Green component.",
                            "b": "Blue component."
                        }
                    },
                    "type": "C"
                },
                ".ctor(System.Int32)": {
                    "documentation": {
                        "summary": "Creates a new color with the specified value.",
                        "param": {
                            "value": "The raw integer value."
                        }
                    },
                    "type": "C"
                },
                "Red": {
                    "documentation": {
                        "summary": "Creates a instance of the class with the color red.",
                        "returns": "Color with the value of <c>0xf40404</c>"
                    },
                    "type": "M"
                },
                "Teal": {
                    "documentation": {
                        "summary": "Creates a instance of the class with the color teal.",
                        "returns": "Color with the value of <c>0x1abc9c</c>"
                    },
                    "type": "M"
                }
            },
            "documentation": {
                "summary": "Represents a <see cref=\"T:ExampleProject.Models.Role\" /> color."
            },
            "type": "T"
        },
        "Role": {
            "children": {
                "Id": {
                    "documentation": {
                        "summary": "Gets the unique id of the role",
                        "value": "The unique id of the role."
                    },
                    "type": "P"
                },
                "Name": {
                    "documentation": {
                        "summary": "Gets the name of the role.",
                        "value": "The name of the role."
                    },
                    "type": "P"
                },
                "Guild": {
                    "documentation": {
                        "summary": "Gets the <see cref=\"T:ExampleProject.Models.Guild\" /> the role belongs to.",
                        "value": "The guild the role belongs to."
                    },
                    "type": "P"
                },
                "Color": {
                    "documentation": {
                        "summary": "Gets the color of the role.",
                        "value": "The role's color."
                    },
                    "type": "P"
                },
                "Hoist": {
                    "documentation": {
                        "summary": "Checks if the role will be displayed separately from other members.",
                        "value": "<c>true</c> if it will be displayed separately, <c>false</c> otherwise."
                    },
                    "type": "P"
                },
                "Position": {
                    "documentation": {
                        "summary": "Gets the position of the role.",
                        "value": "The position of the role.",
                        "remarks": "Bottom role has a position of 0."
                    },
                    "type": "P"
                },
                "Mentionable": {
                    "documentation": {
                        "summary": "Checks if the role can be mentioned by users.",
                        "value": "<c>true</c> if it's mentionable, <c>false</c> otherwise."
                    },
                    "type": "P"
                },
                "IsDefault": {
                    "documentation": {
                        "summary": "Checks if the role is the guild's default role.",
                        "value": "<c>true</c> if it is the default role, <c>false</c> otherwise."
                    },
                    "type": "P"
                }
            },
            "documentation": {
                "summary": "Represents a Role in a <see cref=\"P:ExampleProject.Models.Role.Guild\" />."
            },
            "type": "T"
        },
        "Status": {
            "children": {
                "ONLINE": {
                    "documentation": {
                        "summary": "User is online."
                    },
                    "type": "F"
                },
                "OFFLINE": {
                    "documentation": {
                        "summary": "User is offline."
                    },
                    "type": "F"
                },
                "IDLE": {
                    "documentation": {
                        "summary": "User is idle or set the idle status."
                    },
                    "type": "F"
                },
                "DO_NOT_DISTURB": {
                    "documentation": {
                        "summary": "User is in do not disturb mode."
                    },
                    "type": "F"
                },
                "INVISIBLE": {
                    "documentation": {
                        "summary": "User is invisible."
                    },
                    "type": "F"
                }
            },
            "documentation": {
                "summary": "Represents the possible user status"
            },
            "type": "T"
        },
        "Channel": {
            "children": {
                "Id": {
                    "documentation": {
                        "summary": "Gets the channel's id",
                        "value": "The channel's id."
                    },
                    "type": "P"
                },
                "Type": {
                    "documentation": {
                        "summary": "Gets the channel's type",
                        "value": "The type of channel."
                    },
                    "type": "P"
                },
                ".ctor": {
                    "documentation": {
                        "summary": "Initializes a new instance of the <see cref=\"T:ExampleProject.Models.Channel\" /> class."
                    },
                    "type": "C"
                },
                "GetMessage(System.Int32)": {
                    "documentation": {
                        "summary": "Gets the message with the specified id.",
                        "returns": "The message.",
                        "param": {
                            "messageId": "Message id."
                        }
                    },
                    "type": "M"
                }
            },
            "documentation": {
                "summary": "Represents a channel"
            },
            "type": "T"
        },
        "Message": {
            "children": {
                "Id": {
                    "documentation": {
                        "summary": "Gets the unique id of the message",
                        "value": "The unique id."
                    },
                    "type": "P"
                },
                "Author": {
                    "documentation": {
                        "summary": "Gets the author of the message.",
                        "value": "The user that sent the message."
                    },
                    "type": "P"
                },
                "Channel": {
                    "documentation": {
                        "summary": "Gets the message's channel.",
                        "value": "<see cref=\"T:ExampleProject.Models.Channel\" /> where the message is."
                    },
                    "type": "P"
                },
                "Guild": {
                    "documentation": {
                        "summary": "Gets the guild that the message belongs to, if applicable",
                        "value": "<see cref=\"T:ExampleProject.Models.Guild\" /> where the message is or <c>null</c>."
                    },
                    "type": "P"
                },
                "Content": {
                    "documentation": {
                        "summary": "Gets the content of the message."
                    },
                    "type": "P"
                },
                "CreatedAt": {
                    "documentation": {
                        "summary": "Gets the date the message was sent.",
                        "value": "The date and time the message was sent in UTC."
                    },
                    "type": "P"
                },
                "EditedAt": {
                    "documentation": {
                        "summary": "Gets the time when the message was edited",
                        "value": "The time when it was edited or <c>null</c> if not edited."
                    },
                    "type": "P"
                },
                "Pin": {
                    "documentation": {
                        "summary": "Pins a message.",
                        "returns": "<c>true</c> if it was pinned successfully, <c>false</c> otherwise."
                    },
                    "type": "M"
                },
                "Unpin": {
                    "documentation": {
                        "summary": "Unpins a message.",
                        "returns": "<c>true</c> if it was unpinned successfully, <c>false</c> otherwise."
                    },
                    "type": "M"
                }
            },
            "documentation": {
                "summary": "Represents a message."
            },
            "type": "T"
        },
        "Guild": {
            "children": {
                "Id": {
                    "documentation": {
                        "summary": "Gets the id.",
                        "value": "The guild's id."
                    },
                    "type": "P"
                },
                "Name": {
                    "documentation": {
                        "summary": "Gets or sets the name.",
                        "value": "The name of the guild."
                    },
                    "type": "P"
                },
                "GetChannel(System.Int32)": {
                    "documentation": {
                        "summary": "Gets a channel in the guild with the given ID",
                        "param": {
                            "channelId": "Id of the channel to look for."
                        },
                        "returns": "The channel found"
                    },
                    "type": "M"
                }
            },
            "documentation": {
                "summary": "Represents a guild."
            },
            "type": "T"
        },
        "User": {
            "children": {
                "Id": {
                    "documentation": {
                        "summary": "Gets the id.",
                        "value": "The user's id."
                    },
                    "type": "P"
                },
                "Name": {
                    "documentation": {
                        "summary": "Gets or sets the name.",
                        "value": "The name of the user."
                    },
                    "type": "P"
                },
                "Discriminator": {
                    "documentation": {
                        "summary": "Gets the user's discriminator.",
                        "value": "A four character numeric discriminator."
                    },
                    "type": "P"
                },
                "DisplayName": {
                    "documentation": {
                        "summary": "Gets the user's display name",
                        "remarks": "This property always returns the <see cref=\"P:ExampleProject.Models.User.Name\" /> of the user. This property's behaviour changes in <see cref=\"T:ExampleProject.Models.GuildUser\" />",
                        "value": "The user's display name."
                    },
                    "type": "P"
                },
                "IsBot": {
                    "documentation": {
                        "summary": "Checks if the user is a bot user.",
                        "value": "<c>true</c> if the user is a bot, <c>false</c> otherwise."
                    },
                    "type": "P"
                },
                "CreationDate": {
                    "documentation": {
                        "summary": "Gets the user's creation date.",
                        "value": "The creation date in UTC."
                    },
                    "type": "P"
                },
                "Mention": {
                    "documentation": {
                        "summary": "Gets a string that allows you to mention the user",
                        "value": "String that mentions the user in messages."
                    },
                    "type": "P"
                },
                "GetGuilds": {
                    "documentation": {
                        "summary": "Gets all guilds the user is in.",
                        "returns": "The guild the user belongs to"
                    },
                    "type": "M"
                }
            },
            "documentation": {
                "summary": "Represents a User"
            },
            "type": "T"
        },
        "ChannelTypes": {
            "children": {
                "GUILD_TEXT": {
                    "documentation": {
                        "summary": "Text channel in a guild."
                    },
                    "type": "F"
                },
                "DM": {
                    "documentation": {
                        "summary": "Private channel between two users."
                    },
                    "type": "F"
                },
                "GUILD_VOICE": {
                    "documentation": {
                        "summary": "Voice channel in a guild."
                    },
                    "type": "F"
                },
                "GROUP_DM": {
                    "documentation": {
                        "summary": "Private group channel."
                    },
                    "type": "F"
                },
                "GUILD_CATEGORY": {
                    "documentation": {
                        "summary": "Channel category in a guild."
                    },
                    "type": "F"
                }
            },
            "documentation": {
                "summary": "Represents the different channel types available."
            },
            "type": "T"
        }
    }
}