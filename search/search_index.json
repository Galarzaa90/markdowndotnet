{
    "docs": [
        {
            "location": "/",
            "text": "markdowndotnet\n\u00b6\n\n\nPython command line tool to generate markdown documents from C# Library files and their XML documentation.\n\n\n \n  \n\n\nRequirements\n\u00b6\n\n\n\n\nPython 3.6 or higher\n\n\npythonnet\n\n\nPyYAML\n\n\nclick\n\n\n\n\nThe generated files markdown files are meant to be used with \nmkdocs\n \n(with the \nmaterial theme\n), but may be compatible with other site generators.\n\n\nHow to use\n\u00b6\n\n\nThe script requires setting the \nDocumentationFile\n setting in the project's configuration, e.g.\n\n\n<DocumentationFile>\nbin\\Debug\\ExampleProject.xml\n</DocumentationFile>\n\n\n\n\n\n\nOnce this has been set, an XML file will be built along with the library's dll file.\n\n\nNow, when running the script, the path to the dll and the xml file must be specified:\n\n\npython markdowndotnet.py ExampleProject.dll ExampleProject.xml\n\n\n\n\n\nBy default, the files will be generated in a folder named \noutput/\n in the working directory.\n\n\nThis contains markdown files generated for each object found in the assembly, ordered in directories by namespace. Aditionally, a file named \nindex.yml\n is created, which can be appened to a \nmkdocs.yml\n file to use with \nmkdocs\n.\n\n\nFeatures\n\u00b6\n\n\n\n\nGenerates markdown documents from a compiled binary (dll) and it's documentation file.\n\n\nDisplays all public fields, properties and methods, along with their parameters and return types.\n\n\nGenerate internal links between members\n\n\nExternal links to system classes\n\n\nPartial support for summary, params and returns tags.\n\n\n\n\nPlanned features\n\u00b6\n\n\n\n\nSupport for all XML tags",
            "title": "Home"
        },
        {
            "location": "/#markdowndotnet",
            "text": "Python command line tool to generate markdown documents from C# Library files and their XML documentation.",
            "title": "markdowndotnet"
        },
        {
            "location": "/#requirements",
            "text": "Python 3.6 or higher  pythonnet  PyYAML  click   The generated files markdown files are meant to be used with  mkdocs  \n(with the  material theme ), but may be compatible with other site generators.",
            "title": "Requirements"
        },
        {
            "location": "/#how-to-use",
            "text": "The script requires setting the  DocumentationFile  setting in the project's configuration, e.g.  <DocumentationFile> bin\\Debug\\ExampleProject.xml </DocumentationFile>   Once this has been set, an XML file will be built along with the library's dll file.  Now, when running the script, the path to the dll and the xml file must be specified:  python markdowndotnet.py ExampleProject.dll ExampleProject.xml  By default, the files will be generated in a folder named  output/  in the working directory.  This contains markdown files generated for each object found in the assembly, ordered in directories by namespace. Aditionally, a file named  index.yml  is created, which can be appened to a  mkdocs.yml  file to use with  mkdocs .",
            "title": "How to use"
        },
        {
            "location": "/#features",
            "text": "Generates markdown documents from a compiled binary (dll) and it's documentation file.  Displays all public fields, properties and methods, along with their parameters and return types.  Generate internal links between members  External links to system classes  Partial support for summary, params and returns tags.",
            "title": "Features"
        },
        {
            "location": "/#planned-features",
            "text": "Support for all XML tags",
            "title": "Planned features"
        },
        {
            "location": "/ExampleProject/ApiClient/",
            "text": "Inherits\n\n\nObject\n\n\nClass ApiClient\n\u00b6\n\n\nRepresents a connection to the client\n\n\nConstructors\n\u00b6\n\n\n\n\nApiClient()\n\u00b6\n\n\nInitializes a new instance of the \nApiClient\n class.\n\n\nDeclaration\n\n\npublic\n \nApiClient\n();\n\n\n\n\n\n\nFields\n\u00b6\n\n\n\n\ntoken\n\u00b6\n\n\nAuthentication token\n\n\nDeclaration\n\n\npublic\n \nstring\n \ntoken\n;\n\n\n\n\n\n\nField Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nString\n\n\nAuthentication token for the account or Application.\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\nUsers\n\u00b6\n\n\nGets a list of all the visible users.\n\n\nDeclaration\n\n\npublic\n \nUser\n[]\n \nUsers\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nUser\n[]\n\n\nArray containing all users the \nClientUser\n can see.\n\n\n\n\n\n\n\n\nMethods\n\u00b6\n\n\n\n\nLogin(System.String)\n\u00b6\n\n\nLogs in to the API\n\n\nDeclaration\n\n\npublic\n \nbool\n \nLogin\n(\nstring\n \ntoken\n)\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nString\n\n\ntoken\n\n\nThe authentication token to use for login.\n\n\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if login was successful, \nfalse\n otherwise.\n\n\n\n\n\n\n\n\nGetGuild(System.Int32)\n\u00b6\n\n\nGets a \nGuild\n with the specified id.\n\n\nDeclaration\n\n\npublic\n \nGuild\n \nGetGuild\n(\nint\n \nguildId\n)\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nguildId\n\n\nThe unique id of the guild.\n\n\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGuild\n\n\nThe guild found, or \nnull\n.\n\n\n\n\n\n\n\n\nGetUser(System.Int32)\n\u00b6\n\n\nGets a \nUser\n with the specified id.\n\n\nDeclaration\n\n\npublic\n \nUser\n \nGetUser\n(\nint\n \nuserId\n)\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nuserId\n\n\nThe unique id of the user.\n\n\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nUser\n\n\nThe user found, or \nnull\n.",
            "title": "ApiClient"
        },
        {
            "location": "/ExampleProject/ApiClient/#class-apiclient",
            "text": "Represents a connection to the client",
            "title": "Class ApiClient"
        },
        {
            "location": "/ExampleProject/ApiClient/#constructors",
            "text": "",
            "title": "Constructors"
        },
        {
            "location": "/ExampleProject/ApiClient/#apiclient",
            "text": "Initializes a new instance of the  ApiClient  class.  Declaration  public   ApiClient ();",
            "title": "ApiClient()"
        },
        {
            "location": "/ExampleProject/ApiClient/#fields",
            "text": "",
            "title": "Fields"
        },
        {
            "location": "/ExampleProject/ApiClient/#token",
            "text": "Authentication token  Declaration  public   string   token ;   Field Value     Type  Description      String  Authentication token for the account or Application.",
            "title": "token"
        },
        {
            "location": "/ExampleProject/ApiClient/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/ApiClient/#users",
            "text": "Gets a list of all the visible users.  Declaration  public   User []   Users   { get ;   }   Property Value     Type  Description      User []  Array containing all users the  ClientUser  can see.",
            "title": "Users"
        },
        {
            "location": "/ExampleProject/ApiClient/#methods",
            "text": "",
            "title": "Methods"
        },
        {
            "location": "/ExampleProject/ApiClient/#loginsystemstring",
            "text": "Logs in to the API  Declaration  public   bool   Login ( string   token )   Parameters     Type  Name  Description      String  token  The authentication token to use for login.     Returns     Type  Description      Boolean  true  if login was successful,  false  otherwise.",
            "title": "Login(System.String)"
        },
        {
            "location": "/ExampleProject/ApiClient/#getguildsystemint32",
            "text": "Gets a  Guild  with the specified id.  Declaration  public   Guild   GetGuild ( int   guildId )   Parameters     Type  Name  Description      Int32  guildId  The unique id of the guild.     Returns     Type  Description      Guild  The guild found, or  null .",
            "title": "GetGuild(System.Int32)"
        },
        {
            "location": "/ExampleProject/ApiClient/#getusersystemint32",
            "text": "Gets a  User  with the specified id.  Declaration  public   User   GetUser ( int   userId )   Parameters     Type  Name  Description      Int32  userId  The unique id of the user.     Returns     Type  Description      User  The user found, or  null .",
            "title": "GetUser(System.Int32)"
        },
        {
            "location": "/ExampleProject/Models/ClientUser/",
            "text": "Inherits\n\n\nUser\n\n\nClass ClientUser\n\u00b6\n\n\nRepresents the User that connected to the API.\n\n\nProperties\n\u00b6\n\n\n\n\nFriends\n\u00b6\n\n\nGets the user's friends.\n\n\nDeclaration\n\n\npublic\n \nUser\n[]\n \nFriends\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nRemarks\n\nOnly non-bot users can have friends.\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nUser\n[]\n\n\nAn array of Users that are friend with the current user.",
            "title": "ClientUser"
        },
        {
            "location": "/ExampleProject/Models/ClientUser/#class-clientuser",
            "text": "Represents the User that connected to the API.",
            "title": "Class ClientUser"
        },
        {
            "location": "/ExampleProject/Models/ClientUser/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/ClientUser/#friends",
            "text": "Gets the user's friends.  Declaration  public   User []   Friends   { get ;   }   Remarks \nOnly non-bot users can have friends.  Property Value     Type  Description      User []  An array of Users that are friend with the current user.",
            "title": "Friends"
        },
        {
            "location": "/ExampleProject/Models/Color/",
            "text": "Inherits\n\n\nObject\n\n\nClass Color\n\u00b6\n\n\nRepresents a \n color.\n\n\nConstructors\n\u00b6\n\n\n\n\nColor(System.Int32,System.Int32,System.Int32)\n\u00b6\n\n\nCreates a color from its red, green and blue components respectively.\n\n\nDeclaration\n\n\npublic\n \nColor\n(\nint\n \nr\n,\n \nint\n \ng\n,\n \nint\n \nb\n);\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nr\n\n\nRed component.\n\n\n\n\n\n\nInt32\n\n\ng\n\n\nGreen component.\n\n\n\n\n\n\nInt32\n\n\nb\n\n\nBlue component.\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\nValue\n\u00b6\n\n\nGets or sets the color's raw integer value.\n\n\nDeclaration\n\n\npublic\n \nint\n \nValue\n \n{\nget\n;\n \nset\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe color's integer value.\n\n\n\n\n\n\n\n\nR\n\u00b6\n\n\nGets the red component of the color.\n\n\nDeclaration\n\n\npublic\n \nbyte\n \nR\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nByte\n\n\nThe red component of the color.\n\n\n\n\n\n\n\n\nG\n\u00b6\n\n\nGets the greeb component of the color.\n\n\nDeclaration\n\n\npublic\n \nbyte\n \nG\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nByte\n\n\nThe greeb component of the color.\n\n\n\n\n\n\n\n\nB\n\u00b6\n\n\nGets the blue component of the color.\n\n\nDeclaration\n\n\npublic\n \nbyte\n \nB\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nByte\n\n\nThe blue component of the color.",
            "title": "Color"
        },
        {
            "location": "/ExampleProject/Models/Color/#class-color",
            "text": "Represents a   color.",
            "title": "Class Color"
        },
        {
            "location": "/ExampleProject/Models/Color/#constructors",
            "text": "",
            "title": "Constructors"
        },
        {
            "location": "/ExampleProject/Models/Color/#colorsystemint32systemint32systemint32",
            "text": "Creates a color from its red, green and blue components respectively.  Declaration  public   Color ( int   r ,   int   g ,   int   b );   Parameters     Type  Name  Description      Int32  r  Red component.    Int32  g  Green component.    Int32  b  Blue component.",
            "title": "Color(System.Int32,System.Int32,System.Int32)"
        },
        {
            "location": "/ExampleProject/Models/Color/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/Color/#value",
            "text": "Gets or sets the color's raw integer value.  Declaration  public   int   Value   { get ;   set ;   }   Property Value     Type  Description      Int32  The color's integer value.",
            "title": "Value"
        },
        {
            "location": "/ExampleProject/Models/Color/#r",
            "text": "Gets the red component of the color.  Declaration  public   byte   R   { get ;   }   Property Value     Type  Description      Byte  The red component of the color.",
            "title": "R"
        },
        {
            "location": "/ExampleProject/Models/Color/#g",
            "text": "Gets the greeb component of the color.  Declaration  public   byte   G   { get ;   }   Property Value     Type  Description      Byte  The greeb component of the color.",
            "title": "G"
        },
        {
            "location": "/ExampleProject/Models/Color/#b",
            "text": "Gets the blue component of the color.  Declaration  public   byte   B   { get ;   }   Property Value     Type  Description      Byte  The blue component of the color.",
            "title": "B"
        },
        {
            "location": "/ExampleProject/Models/Role/",
            "text": "Inherits\n\n\nObject\n\n\nClass Role\n\u00b6\n\n\nRepresents a Role in a \n.\n\n\nProperties\n\u00b6\n\n\n\n\nId\n\u00b6\n\n\nGets the unique id of the role\n\n\nDeclaration\n\n\npublic\n \nint\n \nId\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe unique id of the role.\n\n\n\n\n\n\n\n\nName\n\u00b6\n\n\nGets the name of the role.\n\n\nDeclaration\n\n\npublic\n \nstring\n \nName\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nString\n\n\nThe name of the role.\n\n\n\n\n\n\n\n\nGuild\n\u00b6\n\n\nGets the \nGuild\n the role belongs to.\n\n\nDeclaration\n\n\npublic\n \nGuild\n \nGuild\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGuild\n\n\nThe guild the role belongs to.\n\n\n\n\n\n\n\n\nColor\n\u00b6\n\n\nGets the color of the role.\n\n\nDeclaration\n\n\npublic\n \nColor\n \nColor\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nColor\n\n\nThe role's color.\n\n\n\n\n\n\n\n\nHoist\n\u00b6\n\n\nChecks if the role will be displayed separately from other members.\n\n\nDeclaration\n\n\npublic\n \nbool\n \nHoist\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if it will be displayed separately, \nfalse\n otherwise.\n\n\n\n\n\n\n\n\nPosition\n\u00b6\n\n\nGets the position of the role.\n\n\nDeclaration\n\n\npublic\n \nint\n \nPosition\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nRemarks\n\nBottom role has a position of 0.\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe position of the role.\n\n\n\n\n\n\n\n\nMentionable\n\u00b6\n\n\nChecks if the role can be mentioned by users.\n\n\nDeclaration\n\n\npublic\n \nbool\n \nMentionable\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if it's mentionable, \nfalse\n otherwise.\n\n\n\n\n\n\n\n\nIsDefault\n\u00b6\n\n\nChecks if the role is the guild's default role.\n\n\nDeclaration\n\n\npublic\n \nbool\n \nIsDefault\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if it is the default role, \nfalse\n otherwise.",
            "title": "Role"
        },
        {
            "location": "/ExampleProject/Models/Role/#class-role",
            "text": "Represents a Role in a  .",
            "title": "Class Role"
        },
        {
            "location": "/ExampleProject/Models/Role/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/Role/#id",
            "text": "Gets the unique id of the role  Declaration  public   int   Id   { get ;   }   Property Value     Type  Description      Int32  The unique id of the role.",
            "title": "Id"
        },
        {
            "location": "/ExampleProject/Models/Role/#name",
            "text": "Gets the name of the role.  Declaration  public   string   Name   { get ;   }   Property Value     Type  Description      String  The name of the role.",
            "title": "Name"
        },
        {
            "location": "/ExampleProject/Models/Role/#guild",
            "text": "Gets the  Guild  the role belongs to.  Declaration  public   Guild   Guild   { get ;   }   Property Value     Type  Description      Guild  The guild the role belongs to.",
            "title": "Guild"
        },
        {
            "location": "/ExampleProject/Models/Role/#color",
            "text": "Gets the color of the role.  Declaration  public   Color   Color   { get ;   }   Property Value     Type  Description      Color  The role's color.",
            "title": "Color"
        },
        {
            "location": "/ExampleProject/Models/Role/#hoist",
            "text": "Checks if the role will be displayed separately from other members.  Declaration  public   bool   Hoist   { get ;   }   Property Value     Type  Description      Boolean  true  if it will be displayed separately,  false  otherwise.",
            "title": "Hoist"
        },
        {
            "location": "/ExampleProject/Models/Role/#position",
            "text": "Gets the position of the role.  Declaration  public   int   Position   { get ;   }   Remarks \nBottom role has a position of 0.  Property Value     Type  Description      Int32  The position of the role.",
            "title": "Position"
        },
        {
            "location": "/ExampleProject/Models/Role/#mentionable",
            "text": "Checks if the role can be mentioned by users.  Declaration  public   bool   Mentionable   { get ;   }   Property Value     Type  Description      Boolean  true  if it's mentionable,  false  otherwise.",
            "title": "Mentionable"
        },
        {
            "location": "/ExampleProject/Models/Role/#isdefault",
            "text": "Checks if the role is the guild's default role.  Declaration  public   bool   IsDefault   { get ;   }   Property Value     Type  Description      Boolean  true  if it is the default role,  false  otherwise.",
            "title": "IsDefault"
        },
        {
            "location": "/ExampleProject/Models/Channel/",
            "text": "Inherits\n\n\nObject\n\n\nClass Channel\n\u00b6\n\n\nRepresents a channel\n\n\nConstructors\n\u00b6\n\n\n\n\nChannel()\n\u00b6\n\n\nInitializes a new instance of the \nChannel\n class.\n\n\nDeclaration\n\n\npublic\n \nChannel\n();\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\nId\n\u00b6\n\n\nGets the channel's id\n\n\nDeclaration\n\n\npublic\n \nint\n \nId\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe channel's id.\n\n\n\n\n\n\n\n\nMethods\n\u00b6\n\n\n\n\nGetMessage(System.Int32)\n\u00b6\n\n\nGets the message with the specified id.\n\n\nDeclaration\n\n\npublic\n \nMessage\n \nGetMessage\n(\nint\n \nmessageId\n)\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nmessageId\n\n\nMessage id.\n\n\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nMessage\n\n\nThe message.",
            "title": "Channel"
        },
        {
            "location": "/ExampleProject/Models/Channel/#class-channel",
            "text": "Represents a channel",
            "title": "Class Channel"
        },
        {
            "location": "/ExampleProject/Models/Channel/#constructors",
            "text": "",
            "title": "Constructors"
        },
        {
            "location": "/ExampleProject/Models/Channel/#channel",
            "text": "Initializes a new instance of the  Channel  class.  Declaration  public   Channel ();",
            "title": "Channel()"
        },
        {
            "location": "/ExampleProject/Models/Channel/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/Channel/#id",
            "text": "Gets the channel's id  Declaration  public   int   Id   { get ;   }   Property Value     Type  Description      Int32  The channel's id.",
            "title": "Id"
        },
        {
            "location": "/ExampleProject/Models/Channel/#methods",
            "text": "",
            "title": "Methods"
        },
        {
            "location": "/ExampleProject/Models/Channel/#getmessagesystemint32",
            "text": "Gets the message with the specified id.  Declaration  public   Message   GetMessage ( int   messageId )   Parameters     Type  Name  Description      Int32  messageId  Message id.     Returns     Type  Description      Message  The message.",
            "title": "GetMessage(System.Int32)"
        },
        {
            "location": "/ExampleProject/Models/Message/",
            "text": "Inherits\n\n\nObject\n\n\nClass Message\n\u00b6\n\n\nRepresents a message.\n\n\nProperties\n\u00b6\n\n\n\n\nId\n\u00b6\n\n\nGets the unique id of the message\n\n\nDeclaration\n\n\npublic\n \nint\n \nId\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe unique id.\n\n\n\n\n\n\n\n\nAuthor\n\u00b6\n\n\nGets the author of the message.\n\n\nDeclaration\n\n\npublic\n \nUser\n \nAuthor\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nUser\n\n\nThe user that sent the message.\n\n\n\n\n\n\n\n\nGuild\n\u00b6\n\n\nGets the message's guild.\n\n\nDeclaration\n\n\npublic\n \nGuild\n \nGuild\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGuild\n\n\nGuild\n where the message is, if applicable.\n\n\n\n\n\n\n\n\nContent\n\u00b6\n\n\nGets the content of the message.\n\n\nDeclaration\n\n\npublic\n \nstring\n \nContent\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nString\n\n\n\n\n\n\n\n\n\n\nCreatedAt\n\u00b6\n\n\nGets the date the message was sent.\n\n\nDeclaration\n\n\npublic\n \nDateTime\n \nCreatedAt\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nDateTime\n\n\nThe date and time the message was sent in UTC.\n\n\n\n\n\n\n\n\nMethods\n\u00b6\n\n\n\n\nPin()\n\u00b6\n\n\nPins a message.\n\n\nDeclaration\n\n\npublic\n \nbool\n \nPin\n()\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if it was pinned successfully, \nfalse\n otherwise.\n\n\n\n\n\n\n\n\nUnpin()\n\u00b6\n\n\nUnpins a message.\n\n\nDeclaration\n\n\npublic\n \nbool\n \nUnpin\n()\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if it was unpinned successfully, \nfalse\n otherwise.",
            "title": "Message"
        },
        {
            "location": "/ExampleProject/Models/Message/#class-message",
            "text": "Represents a message.",
            "title": "Class Message"
        },
        {
            "location": "/ExampleProject/Models/Message/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/Message/#id",
            "text": "Gets the unique id of the message  Declaration  public   int   Id   { get ;   }   Property Value     Type  Description      Int32  The unique id.",
            "title": "Id"
        },
        {
            "location": "/ExampleProject/Models/Message/#author",
            "text": "Gets the author of the message.  Declaration  public   User   Author   { get ;   }   Property Value     Type  Description      User  The user that sent the message.",
            "title": "Author"
        },
        {
            "location": "/ExampleProject/Models/Message/#guild",
            "text": "Gets the message's guild.  Declaration  public   Guild   Guild   { get ;   }   Property Value     Type  Description      Guild  Guild  where the message is, if applicable.",
            "title": "Guild"
        },
        {
            "location": "/ExampleProject/Models/Message/#content",
            "text": "Gets the content of the message.  Declaration  public   string   Content   { get ;   }   Property Value     Type  Description      String",
            "title": "Content"
        },
        {
            "location": "/ExampleProject/Models/Message/#createdat",
            "text": "Gets the date the message was sent.  Declaration  public   DateTime   CreatedAt   { get ;   }   Property Value     Type  Description      DateTime  The date and time the message was sent in UTC.",
            "title": "CreatedAt"
        },
        {
            "location": "/ExampleProject/Models/Message/#methods",
            "text": "",
            "title": "Methods"
        },
        {
            "location": "/ExampleProject/Models/Message/#pin",
            "text": "Pins a message.  Declaration  public   bool   Pin ()   Returns     Type  Description      Boolean  true  if it was pinned successfully,  false  otherwise.",
            "title": "Pin()"
        },
        {
            "location": "/ExampleProject/Models/Message/#unpin",
            "text": "Unpins a message.  Declaration  public   bool   Unpin ()   Returns     Type  Description      Boolean  true  if it was unpinned successfully,  false  otherwise.",
            "title": "Unpin()"
        },
        {
            "location": "/ExampleProject/Models/Guild/",
            "text": "Inherits\n\n\nObject\n\n\nClass Guild\n\u00b6\n\n\nRepresents a guild.\n\n\nProperties\n\u00b6\n\n\n\n\nId\n\u00b6\n\n\nGets the id.\n\n\nDeclaration\n\n\npublic\n \nint\n \nId\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe guild's id.\n\n\n\n\n\n\n\n\nName\n\u00b6\n\n\nGets or sets the name.\n\n\nDeclaration\n\n\npublic\n \nint\n \nName\n \n{\nget\n;\n \nset\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe name of the guild.\n\n\n\n\n\n\n\n\nMethods\n\u00b6\n\n\n\n\nGetChannel(System.Int32)\n\u00b6\n\n\nGets a channel in the guild with the given ID\n\n\nDeclaration\n\n\npublic\n \nChannel\n \nGetChannel\n(\nint\n \nchannelId\n)\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\n\n\nType\n\n\nName\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nchannelId\n\n\nId of the channel to look for.\n\n\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nChannel\n\n\nThe channel found",
            "title": "Guild"
        },
        {
            "location": "/ExampleProject/Models/Guild/#class-guild",
            "text": "Represents a guild.",
            "title": "Class Guild"
        },
        {
            "location": "/ExampleProject/Models/Guild/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/Guild/#id",
            "text": "Gets the id.  Declaration  public   int   Id   { get ;   }   Property Value     Type  Description      Int32  The guild's id.",
            "title": "Id"
        },
        {
            "location": "/ExampleProject/Models/Guild/#name",
            "text": "Gets or sets the name.  Declaration  public   int   Name   { get ;   set ;   }   Property Value     Type  Description      Int32  The name of the guild.",
            "title": "Name"
        },
        {
            "location": "/ExampleProject/Models/Guild/#methods",
            "text": "",
            "title": "Methods"
        },
        {
            "location": "/ExampleProject/Models/Guild/#getchannelsystemint32",
            "text": "Gets a channel in the guild with the given ID  Declaration  public   Channel   GetChannel ( int   channelId )   Parameters     Type  Name  Description      Int32  channelId  Id of the channel to look for.     Returns     Type  Description      Channel  The channel found",
            "title": "GetChannel(System.Int32)"
        },
        {
            "location": "/ExampleProject/Models/User/",
            "text": "Inherits\n\n\nObject\n\n\nClass User\n\u00b6\n\n\nRepresents a User\n\n\nProperties\n\u00b6\n\n\n\n\nId\n\u00b6\n\n\nGets the id.\n\n\nDeclaration\n\n\npublic\n \nint\n \nId\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nInt32\n\n\nThe user's id.\n\n\n\n\n\n\n\n\nName\n\u00b6\n\n\nGets or sets the name.\n\n\nDeclaration\n\n\npublic\n \nstring\n \nName\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nString\n\n\nThe name of the user.\n\n\n\n\n\n\n\n\nDiscriminator\n\u00b6\n\n\nGets the user's discriminator.\n\n\nDeclaration\n\n\npublic\n \nstring\n \nDiscriminator\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nString\n\n\nA four character numeric discriminator.\n\n\n\n\n\n\n\n\nIsBot\n\u00b6\n\n\nChecks if the user is a bot user.\n\n\nDeclaration\n\n\npublic\n \nbool\n \nIsBot\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBoolean\n\n\ntrue\n if the user is a bot, \nfalse\n otherwise.\n\n\n\n\n\n\n\n\nCreationDate\n\u00b6\n\n\nGets the user's creation date.\n\n\nDeclaration\n\n\npublic\n \nDateTime\n \nCreationDate\n \n{\nget\n;\n \n}\n\n\n\n\n\n\nProperty Value\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nDateTime\n\n\nThe creation date in UTC.\n\n\n\n\n\n\n\n\nMethods\n\u00b6\n\n\n\n\nGetGuilds()\n\u00b6\n\n\nGets all guilds the user is in.\n\n\nDeclaration\n\n\npublic\n \nGuild\n[]\n \nGetGuilds\n()\n\n\n\n\n\n\nReturns\n\n\n\n\n\n\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGuild\n[]\n\n\nThe guild the user belongs to",
            "title": "User"
        },
        {
            "location": "/ExampleProject/Models/User/#class-user",
            "text": "Represents a User",
            "title": "Class User"
        },
        {
            "location": "/ExampleProject/Models/User/#properties",
            "text": "",
            "title": "Properties"
        },
        {
            "location": "/ExampleProject/Models/User/#id",
            "text": "Gets the id.  Declaration  public   int   Id   { get ;   }   Property Value     Type  Description      Int32  The user's id.",
            "title": "Id"
        },
        {
            "location": "/ExampleProject/Models/User/#name",
            "text": "Gets or sets the name.  Declaration  public   string   Name   { get ;   }   Property Value     Type  Description      String  The name of the user.",
            "title": "Name"
        },
        {
            "location": "/ExampleProject/Models/User/#discriminator",
            "text": "Gets the user's discriminator.  Declaration  public   string   Discriminator   { get ;   }   Property Value     Type  Description      String  A four character numeric discriminator.",
            "title": "Discriminator"
        },
        {
            "location": "/ExampleProject/Models/User/#isbot",
            "text": "Checks if the user is a bot user.  Declaration  public   bool   IsBot   { get ;   }   Property Value     Type  Description      Boolean  true  if the user is a bot,  false  otherwise.",
            "title": "IsBot"
        },
        {
            "location": "/ExampleProject/Models/User/#creationdate",
            "text": "Gets the user's creation date.  Declaration  public   DateTime   CreationDate   { get ;   }   Property Value     Type  Description      DateTime  The creation date in UTC.",
            "title": "CreationDate"
        },
        {
            "location": "/ExampleProject/Models/User/#methods",
            "text": "",
            "title": "Methods"
        },
        {
            "location": "/ExampleProject/Models/User/#getguilds",
            "text": "Gets all guilds the user is in.  Declaration  public   Guild []   GetGuilds ()   Returns     Type  Description      Guild []  The guild the user belongs to",
            "title": "GetGuilds()"
        },
        {
            "location": "/ExampleProject/Models/ChannelTypes/",
            "text": "Inherits\n\n\nEnum\n\n\nEnum ChannelTypes\n\u00b6\n\n\nRepresents the different channel types available.\n\n\n\n\n\n\n\n\nField\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGUILD_TEXT\n\n\nText channel in a guild.\n\n\n\n\n\n\nDM\n\n\nPrivate channel between two users.\n\n\n\n\n\n\nGUILD_VOICE\n\n\nVoice channel in a guild.\n\n\n\n\n\n\nGROUP_DM\n\n\nPrivate group channel.\n\n\n\n\n\n\nGUILD_CATEGORY\n\n\nChannel category in a guild.",
            "title": "ChannelTypes"
        },
        {
            "location": "/ExampleProject/Models/ChannelTypes/#enum-channeltypes",
            "text": "Represents the different channel types available.     Field  Description      GUILD_TEXT  Text channel in a guild.    DM  Private channel between two users.    GUILD_VOICE  Voice channel in a guild.    GROUP_DM  Private group channel.    GUILD_CATEGORY  Channel category in a guild.",
            "title": "Enum ChannelTypes"
        }
    ]
}